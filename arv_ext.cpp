#include "arv_ext.h"

#include <opencv2/imgproc.hpp>

#define RETURN_IF_MATCH(value, searched) \
  if (value == searched) \
    return true;

namespace ArvExt {

bool isBayer(const ArvPixelFormat fmt)
{
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_8);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_8);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_8);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_8);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_10);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_10);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_10);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_10);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_12);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_12);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_12);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_12);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_10P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_10P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_10P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_10P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_12P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_12P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_12P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_12P);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GR_10_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_RG_10_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_GB_10_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_BAYER_BG_10_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_16);
  RETURN_IF_MATCH(fmt, ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_16);

  return false;
}

int demosaicingVNG(const ArvPixelFormat fmt)
{
  switch (fmt) {
    case ARV_PIXEL_FORMAT_BAYER_BG_8:
    case ARV_PIXEL_FORMAT_BAYER_BG_10:
    case ARV_PIXEL_FORMAT_BAYER_BG_12:
    case ARV_PIXEL_FORMAT_BAYER_BG_16:
    case ARV_PIXEL_FORMAT_BAYER_BG_10P:
    case ARV_PIXEL_FORMAT_BAYER_BG_12P:
    case ARV_PIXEL_FORMAT_BAYER_BG_12_PACKED:
    case ARV_PIXEL_FORMAT_BAYER_BG_10_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_16:
      return cv::COLOR_BayerBG2BGR_VNG;
    case ARV_PIXEL_FORMAT_BAYER_GR_8:
    case ARV_PIXEL_FORMAT_BAYER_GR_10:
    case ARV_PIXEL_FORMAT_BAYER_GR_12:
    case ARV_PIXEL_FORMAT_BAYER_GR_16:
    case ARV_PIXEL_FORMAT_BAYER_GR_10P:
    case ARV_PIXEL_FORMAT_BAYER_GR_12P:
    case ARV_PIXEL_FORMAT_BAYER_GR_12_PACKED:
    case ARV_PIXEL_FORMAT_BAYER_GR_10_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_16:
      return cv::COLOR_BayerGR2BGR_VNG;
    case ARV_PIXEL_FORMAT_BAYER_GB_8:
    case ARV_PIXEL_FORMAT_BAYER_GB_10:
    case ARV_PIXEL_FORMAT_BAYER_GB_12:
    case ARV_PIXEL_FORMAT_BAYER_GB_16:
    case ARV_PIXEL_FORMAT_BAYER_GB_10P:
    case ARV_PIXEL_FORMAT_BAYER_GB_12P:
    case ARV_PIXEL_FORMAT_BAYER_GB_12_PACKED:
    case ARV_PIXEL_FORMAT_BAYER_GB_10_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_16:
      return cv::COLOR_BayerGB2BGR_VNG;
    case ARV_PIXEL_FORMAT_BAYER_RG_8:
    case ARV_PIXEL_FORMAT_BAYER_RG_10:
    case ARV_PIXEL_FORMAT_BAYER_RG_12:
    case ARV_PIXEL_FORMAT_BAYER_RG_16:
    case ARV_PIXEL_FORMAT_BAYER_RG_10P:
    case ARV_PIXEL_FORMAT_BAYER_RG_12P:
    case ARV_PIXEL_FORMAT_BAYER_RG_12_PACKED:
    case ARV_PIXEL_FORMAT_BAYER_RG_10_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED:
    case ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_16:
      return cv::COLOR_BayerRG2BGR_VNG;
  }
  throw std::runtime_error("Demosaicing code not found");
}

}  // namespace ArvExt
